@inject HttpClient _client

<EditForm Model="@employer" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Name: </label>
            <div>
                <InputText @bind-Value="@employer.E_Name" class="form-control" />
                <ValidationMessage For="@(() =>employer.E_Name)" />
            </div>
        </div>

        <div class="form-group">
            <label>Email: </label>
            <div>
                <InputText @bind-Value="@employer.E_Email" class="form-control" />
                <ValidationMessage For="@(() =>employer.E_Email)" />
            </div>
        </div>
        <div class="form-group">
            <label>Password: </label>
            <div>
                <InputText @bind-Value="@employer.E_Password" class="form-control" />
                <ValidationMessage For="@(() =>employer.E_Password)" />
            </div>
        </div>
        <div class="form-group">
            <label>Age: </label>
            <div>
                <InputNumber @bind-Value="@employer.E_Age" class="form-control" />
                <ValidationMessage For="@(() =>employer.E_Age)" />
            </div>
        </div>
        <div class="form-group">
            <label>Mobile Phone: </label>
            <div>
                <InputText @bind-Value="@employer.E_Mobile" class="form-control" />
                <ValidationMessage For="@(() =>employer.E_Mobile)" />
            </div>
        </div>
        <div class="form-group">
            <label>Date of Birth(DOB): </label>
            <div>
                <InputDate @bind-Value="@employer.E_DateOfBirth" class="form-control" />
                <ValidationMessage For="@(() =>employer.E_DateOfBirth)" />
            </div>
        </div>
        <div class="form-group">
            <label>Which Company do you reside: </label>
            <div>
                <InputSelect @bind-Value="@employer.CompanyId" class="form-control">
                    <option value="">-- Select Company --</option>
                    @if (Companies != null)
                    {
                        foreach (var company in Companies)
                        {
                            <option value="@company.Id">@company.C_Name </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() =>employer.CompanyId)" />
            </div>
        </div>
    </fieldset>
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            Create Employer
        </button>
    }
    <BackToList Target="employers" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Employer? employer { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Employer>? Employers;
    private IList<Company>? Companies;

    protected async override Task OnInitializedAsync()
    {
        Employers = await _client.GetFromJsonAsync<List<Employer>>($"{Endpoints.EmployersEndpoint}");
        Companies = await _client.GetFromJsonAsync<List<Company>>($"{Endpoints.CompaniesEndpoint}");
    }
}

